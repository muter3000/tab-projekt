basePath: /
consumes:
- application/json
definitions:
  Administrator:
    properties:
      StanowiskoAdministracyjne:
        $ref: '#/definitions/StanowiskoAdministracyjne'
      administracja_id:
        format: int32
        type: integer
        x-go-name: AdministracjaID
      haslo:
        type: string
        x-go-name: Haslo
      id:
        format: int32
        type: integer
        uniqueItems: true
        x-go-name: Id
      imie:
        type: string
        x-go-name: Imie
      login:
        type: string
        uniqueItems: true
        x-go-name: Login
      nazwisko:
        type: string
        x-go-name: Nazwisko
      pesel:
        type: string
        x-go-name: Pesel
      stanowisko_administracyjne_id:
        format: int32
        type: integer
        x-go-name: StanowiskoAdministracyjneID
    required:
    - id
    - imie
    - nazwisko
    - login
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Pracownik:
    properties:
      haslo:
        type: string
        x-go-name: Haslo
      id:
        format: int32
        type: integer
        uniqueItems: true
        x-go-name: Id
      imie:
        type: string
        x-go-name: Imie
      login:
        type: string
        uniqueItems: true
        x-go-name: Login
      nazwisko:
        type: string
        x-go-name: Nazwisko
      pesel:
        type: string
        x-go-name: Pesel
    required:
    - id
    - imie
    - nazwisko
    - login
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Kierowca:
    properties:
      haslo:
        type: string
        x-go-name: Haslo
      id:
        format: int32
        type: integer
        uniqueItems: true
        x-go-name: Id
      imie:
        type: string
        x-go-name: Imie
      login:
        type: string
        uniqueItems: true
        x-go-name: Login
      nazwisko:
        type: string
        x-go-name: Nazwisko
      pesel:
        type: string
        x-go-name: Pesel
    required:
    - id
    - imie
    - nazwisko
    - login
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  StanowiskoAdministracyjne:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      typ:
        type: string
        x-go-name: Typ
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  KategoriaPrawaJazdy:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      kategoria:
        type: string
        x-go-name: Kategoria
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  KategoriaKierowcy:
    properties:
      kierowca_id:
        format: int32
        type: integer
        x-go-name: KierowcaId
      kategoria_prawa_jazdy:
        type: integer
        x-go-name: KategoriaPrawaJazdyId
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Blad:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      tytul:
        type: string
        x-go-name: Tytul
      opis:
        type: string
        x-go-name: Opis
      kategoria:
        type: string
        x-go-name: Kategoria
      data_utworzenia:
        type: string
        format: "date-time"
        x-go-name: DataUtworzenia
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Pojazd:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      vin:
        type: string
        x-go-name: Vin
      pojemnosc_silnika:
        format: int32
        type: integer
        x-go-name: pojemnosc_silnika
      marka_id:
        format: int32
        type: integer
        x-go-name: MarkaID
      numer_rejestracyjny:
        type: string
        x-go-name: NumerRejestracyjny
      model:
        type: string
        x-go-name: Model
      Marka:
        $ref: '#/definitions/Marka'
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  PojazdCiezarowy:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      vin:
        type: string
        x-go-name: NumerSilnika
      pojemnosc_silnika:
        format: int32
        type: integer
        x-go-name: pojemnosc_silnika
      marka_id:
        format: int32
        type: integer
        x-go-name: MarkaID
      numer_rejestracyjny:
        type: string
        x-go-name: NumerRejestracyjny
      model:
        type: string
        x-go-name: Model
      marka:
        $ref: '#/definitions/Marka'
      ladownosc:
        format: int32
        type: integer
        x-go-name: Ladownosc
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Marka:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      nazwa:
        type: string
        x-go-name: Nazwa
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Trasa:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      miejscowosc_poczatkowa:
        type: string
        x-go-name: MiejscowoscPoczatkowa
      miejscowosc_koncowa:
        type: string
        x-go-name: MiejscowoscKoncowa
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
  Kurs:
    properties:
      id:
        format: int32
        type: integer
        x-go-name: Id
      data_rozpoczecia:
        type: string
        format: "date-time"
        x-go-name: DataRozpoczecia
      data_zakonczenia:
        type: string
        format: "date-time"
        x-go-name: DataZakonczenia
      czas_rozpoczecia:
        type: string
        format: "date-time"
        x-go-name: CzasRozpoczecia
      czas_zakonczenia:
        type: string
        format: "date-time"
        x-go-name: CzasZakonczenia
      czas_przejazdu:
        format: int32
        type: integer
        x-go-name: CzasPrzejazdu
      ladunek:
        format: float
        type: float
        x-go-name: Ladunek
      trasa_id:
        format: int32
        type: integer
        x-go-name: TrasaID
      Trasa:
        $ref: '#/definitions/Trasa'
      kierowca_id:
        format: int32
        type: integer
        x-go-name: KierowcaID
      Kierowca:
        $ref: '#/definitions/Kierowca'
      pojazd_id:
        format: int32
        type: integer
        x-go-name: PojazdID
      Pojazd:
        $ref: '#/definitions/Pojazd'
    type: object
    x-go-package: github.com/tab-projekt-backend/schemas
info:
  description: Documentation of Workers API
  title: Workers API
  version: 1.0.0
paths:

  /administracja/:
    get:
      description: Zwraca wszystkich pracownikow administracji
      operationId: AllAdministratorzy
      responses:
        "200":
          $ref: '#/responses/administratorsResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Administratorzy
    post:
      description: Tworzy nowego pracownika administracji
      operationId: CreateAdministrator
      parameters:
      - description: Nowy Administrator
        in: body
        name: Body
        schema:
          properties:
            haslo:
              description: Haslo has to be longer than 6 characters
              type: string
              x-go-name: Haslo
            imie:
              type: string
              x-go-name: Imie
            login:
              type: string
              uniqueItems: true
              x-go-name: Login
            nazwisko:
              type: string
              x-go-name: Nazwisko
            pesel:
              description: Pesel of the specific administrator. Must be unique and
                have 11 numbers to be correct.
              type: string
              uniqueItems: true
              x-go-name: Pesel
            stanowisko_administracyjne_id:
              description: Id of administrator's stanowisko, a negative value indicates
                that he doesn't have one
              format: int64
              type: integer
              x-go-name: StanowiskoAdministracyjneId
          required:
          - login
          - haslo
          - imie
          - nazwisko
          - pesel
          - stanowisko_administracyjne_id
          type: object
      responses:
        "200":
          $ref: '#/responses/administratorResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Administratorzy
  /administracja/{id}:
    get:
      description: Zwraca pojedynczego pracownika administracji
      operationId: GetAdministratorByID
      parameters:
      - description: Id pracownika administracji
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: AdministracjaID
      responses:
        "200":
          $ref: '#/responses/administratorResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Administratorzy

  /bledy/:
    get:
      description: Zwraca wszystkie bledy
      operationId: AllBledy
      parameters:
        - in: query
          name: data_utworzenia_min
          schema:
            type: string
            format: "date-time"
          description: Minimalna data utworzenia
        - in: query
          name: data_utworzenia_max
          schema:
            type: string
            format: "date-time"
          description: Maksymalna data utworzenia
      responses:
        "200":
          $ref: '#/responses/bladResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Bledy
    post:
      description: Tworzy nowy blad
      operationId: CreateBlad
      parameters:
      - description: Nowy blad
        in: body
        name: Body
        schema:
          properties:
            tytul:
              description: Title of the error
              type: string
              x-go-name: Tytul
            opis:
              description: Description of the error
              type: string
              x-go-name: Opis
            kategoria:
              description: Category of the error
              type: string
              x-go-name: Kategoria
          required:
          - tytul
          - opis
          - kategoria
          type: object
      responses:
        "200":
          $ref: '#/responses/bladResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Bledy
  /bledy/{id}:
    get:
      description: Zwraca pojedynczy blad
      operationId: GetBladByID
      parameters:
      - description: Id bledu
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/bladResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Bledy

  /kategoria_prawa_jazdy/:
    get:
      description: Zwraca wszystkie kategorie prawa jazdy
      operationId: AllKategoriePrawaJazdy
      responses:
        "200":
          $ref: '#/responses/kategoriaPrawaJazdyResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - KategoriePrawaJazdy
    post:
      description: Tworzy nowa kategorie prawa jazdy
      operationId: CreateKategoriaPrawaJazdy
      parameters:
      - description: Nowa kategoria prawa jazdy
        in: body
        name: Body
        schema:
          properties:
            kategoria:
              type: string
              x-go-name: Kategoria
          required:
          - kategoria
          type: object
      responses:
        "200":
          $ref: '#/responses/kategoriaPrawaJazdyResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - KategoriePrawaJazdy
  /kategoria_prawa_jazdy/{id}:
    get:
      description: Zwraca pojedyncza kategorie prawa jazdy
      operationId: GetKategoriaPrawaJazdyID
      parameters:
      - description: Id kategorii prawa jazdy
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/kategoriaPrawaJazdyResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - KategoriePrawaJazdy
      
  /kierowcy/:
    get:
      description: Zwraca wszystkich kierowcow
      operationId: AllDrivers
      responses:
        "200":
          $ref: '#/responses/kierowcaResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kierowcy
    post:
      description: Tworzy nowego kierowce
      operationId: CreateKierowca
      parameters:
      - description: Nowy kierowca
        in: body
        name: Body
        schema:
          properties:
            haslo:
              description: Haslo has to be longer than 6 characters
              type: string
              x-go-name: Haslo
            imie:
              type: string
              x-go-name: Imie
            login:
              type: string
              uniqueItems: true
              x-go-name: Login
            nazwisko:
              type: string
              x-go-name: Nazwisko
            pesel:
              description: Pesel of the specific driver. Must be unique and
                have 11 numbers to be correct.
              type: string
              uniqueItems: true
              x-go-name: Pesel
            kategorie:
              description: Array of ids from the KategoriaPrawaJazdy table
              type: array
              items:
                id:
                  type: integer
                  format: int32
                  x-go-name: Id
          required:
          - haslo
          - imie
          - login
          - nazwisko
          - pesel
          - kategorie
          type: object
      responses:
        "200":
          $ref: '#/responses/kierowcaResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kierowcy
  /kierowcy/{id}:
    get:
      description: Zwraca pojedynczego kierowce
      operationId: GetKierowcaByID
      parameters:
      - description: Id kierowcy
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: KierowcaID
      responses:
        "200":
          $ref: '#/responses/kierowcaResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kierowcy
  /kierowcy/pesel/{pesel}:
    get:
      description: Zwraca pojedynczego kierowce
      operationId: GetKierowcaByPESEL
      parameters:
      - description: Pesel kierowcy
        in: path
        name: pesel
        required: true
        type: string
        x-go-name: Pesel
      responses:
        "200":
          $ref: '#/responses/kierowcaResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kierowcy
  /kursy/:
    get:
      description: Zwraca wszystkie kursy
      operationId: AllKursy
      parameters:
        - in: query
          name: data_roczpoczecia_min
          schema:
            type: string
            format: "date-time"
          description: Minimalna data rozpoczecia
        - in: query
          name: data_roczpoczecia_max
          schema:
            type: string
            format: "date-time"
          description: Maksymalna data rozpoczecia
        - in: query
          name: data_zakonczenia_min
          schema:
            type: string
            format: "date-time"
          description: Minimalna data zakonczenia
        - in: query
          name: data_zakonczenia_max
          schema:
            type: string
            format: "date-time"
          description: Maksymalna data zakonczenia
        - in: query
          name: imie_pracownika
          schema:
            type: string
          description: Imie pracownika
        - in: query
          name: nazwisko_pracownika
          schema:
            type: string
          description: Nazwisko pracownika
        - in: query
          name: marka
          schema:
            type: string
          description: Marka
      responses:
        "200":
          $ref: '#/responses/kursResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kursy
    post:
      description: Tworzy nowy kurs
      operationId: CreateKurs
      parameters:
      - description: Nowy kurs
        in: body
        name: Body
        schema:
          properties:
            data_rozpoczecia:
              type: string
              format: "date-time"
              x-go-name: DataRozpoczecia
            data_zakonczenia:
              type: string
              format: "date-time"
              x-go-name: DataZakonczenia
            ladunek:
              format: float
              type: float
              x-go-name: Ladunek
            trasa_id:
              format: int32
              type: integer
              x-go-name: TrasaID
            kierowca_id:
              format: int32
              type: integer
              x-go-name: KierowcaID
            pojazd_id:
              format: int32
              type: integer
              x-go-name: PojazdID
          required:
          - data_rozpoczecia
          - data_zakonczenia
          - ladunek
          - trasa_id
          - kierowca_id
          - pojazd_id
          type: object
      responses:
        "200":
          $ref: '#/responses/kursResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kursy
  /kurs/{id}:
    get:
      description: Zwraca pojedynczy kurs
      operationId: GetKursByID
      parameters:
      - description: Id kursu
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/kursResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kursy
    patch:
      description: Aktualizuje jeden kurs przez kierowce
      operationId: UpdateKursByID
      parameters:
      - description: Id kursu
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      - description: The updated values
        in: body
        name: Body
        schema:
          properties:
            czas_rozpoczecia:
              type: string
              format: "date-time"
              x-go-name: CzasRozpoczecia
            czas_zakonczenia:
              type: string
              format: "date-time"
              x-go-name: CzasZakonczenia
            czas_przejazdu:
              format: int32
              type: integer
              x-go-name: CzasPrzejazdu
          required:
          - czas_rozpoczecia
          - czas_zakonczenia
          - czas_przejazdu
          type: object
      responses:
        "200":
          $ref: '#/responses/kursResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Kursy

  /marki/:
    get:
      description: Zwraca wszystkie marki
      operationId: AllMarki
      responses:
        "200":
          $ref: '#/responses/markaResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Marki
    post:
      description: Tworzy nowa marka
      operationId: CreateMarka
      parameters:
      - description: Nowa marka
        in: body
        name: Body
        schema:
          properties:
            nazwa:
              type: string
              x-go-name: Nazwa
          required:
          - nazwa
          type: object
      responses:
        "200":
          $ref: '#/responses/markaResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Marki
  /marki/{id}:
    get:
      description: Zwraca pojedyncza marke
      operationId: GetMarkaByID
      parameters:
      - description: Id marki
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/markaResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Marki

  /pojazdy/:
    get:
      description: Zwraca wszystkie pojazdy
      operationId: AllPojazdy
      responses:
        "200":
          $ref: '#/responses/pojazdResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pojazdy
    post:
      description: Tworzy nowy pojazd
      operationId: CreatePojazd
      parameters:
      - description: Nowy pojazd
        in: body
        name: Body
        schema:
          properties:
            vin:
              type: string
              x-go-name: Vin
            pojemnosc_silnika:
              format: int32
              type: integer
              x-go-name: pojemnosc_silnika
            marka_id:
              format: int32
              type: integer
              x-go-name: MarkaID
            numer_rejestracyjny:
              type: string
              x-go-name: NumerRejestracyjny
            model:
              type: string
              x-go-name: Model
          required:
          - vin
          - pojemnosc_silnika
          - marka_id
          - numer_rejestracyjny
          - model
          type: object
      responses:
        "200":
          $ref: '#/responses/pojazdResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pojazdy
  /pojazdy/{id}:
    get:
      description: Zwraca pojedynczy pojazd
      operationId: GetPojazdByID
      parameters:
      - description: Id pojazdu
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/pojazdResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pojazdy

  /pojazdy_ciezarowe/:
    get:
      description: Zwraca wszystkie pojazdy ciezarowe
      operationId: AllPojazdyCiezarowe
      responses:
        "200":
          $ref: '#/responses/pojazdCiezarowyResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - PojazdyCiezarowe
    post:
      description: Tworzy nowy pojazd ciezarowy
      operationId: CreatePojazdCiezarowy
      parameters:
      - description: Nowy pojazd Ciezarowy
        in: body
        name: Body
        schema:
          properties:
            vin:
              type: string
              x-go-name: Vin
            pojemnosc_silnika:
              format: int32
              type: integer
              x-go-name: pojemnosc_silnika
            marka_id:
              format: int32
              type: integer
              x-go-name: MarkaID
            numer_rejestracyjny:
              type: string
              x-go-name: NumerRejestracyjny
            model:
              type: string
              x-go-name: Model
            ladownosc:
              format: int32
              type: integer
              x-go-name: Ladownosc
          required:
          - vin
          - pojemnosc_silnika
          - marka_id
          - numer_rejestracyjny
          - model
          - ladownosc
          type: object
      responses:
        "200":
          $ref: '#/responses/pojazdCiezarowyResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - PojazdyCiezarowe
  /pojazdy_ciezarowe/{id}:
    get:
      description: Zwraca pojedynczy pojazd ciezarowy
      operationId: GetPojazdCiezarowyByID
      parameters:
      - description: Id pojazdu ciezarowego
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/pojazdCiezarowyResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - PojazdyCiezarowe

  /pracownicy/:
    get:
      description: Zwraca wszystkich pracownikow
      operationId: AllPracownicy
      responses:
        "200":
          $ref: '#/responses/pracownikResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pracownicy
    post:
      description: Tworzy nowego pracownika
      operationId: CreatePracownik
      parameters:
      - description: Nowy pracownik
        in: body
        name: Body
        schema:
          properties:
            haslo:
              description: Haslo has to be longer than 6 characters
              type: string
              x-go-name: Haslo
            imie:
              type: string
              x-go-name: Imie
            login:
              type: string
              uniqueItems: true
              x-go-name: Login
            nazwisko:
              type: string
              x-go-name: Nazwisko
            pesel:
              description: Pesel of the specific administrator. Must be unique and
                have 11 numbers to be correct.
              type: string
              uniqueItems: true
              x-go-name: Pesel
          required:
          - login
          - haslo
          - imie
          - nazwisko
          - pesel
          type: object
      responses:
        "200":
          $ref: '#/responses/pracownikResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pracownicy
  /pracownicy/{id}:
    get:
      description: Zwraca pojedynczego pracownika
      operationId: GetPracownikByID
      parameters:
      - description: Id pracownika
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/pracownikResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Pracownicy

  /stanowiska_administracyjne/:
    get:
      description: Zwraca wszystkie stanowiska administracyjne
      operationId: AllStanowiskaAdministracyjne
      responses:
        "200":
          $ref: '#/responses/stanowiskoAdministracyjneResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - StanowiskaAdministracyjne
    post:
      description: Tworzy nowe stanowisko administracyjne
      operationId: CreateStanowiskaAdministracyjne
      parameters:
      - description: Nowe stanowiska administracyjne
        in: body
        name: Body
        schema:
          properties:
            typ:
              type: string
              x-go-name: Typ
          required:
          - typ
          type: object
      responses:
        "200":
          $ref: '#/responses/stanowiskoAdministracyjneResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - StanowiskaAdministracyjne
  /stanowiska_administracyjne/{id}:
    get:
      description: Zwraca pojedyncze stanowisko administracyjne
      operationId: GetStanowiskoAdministracyjneByID
      parameters:
      - description: Id stanowiska administracyjnego
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/stanowiskoAdministracyjneResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - StanowiskaAdministracyjne

  /trasy/:
    get:
      description: Zwraca wszystkie trasy
      operationId: AllTrasy
      responses:
        "200":
          $ref: '#/responses/trasaResponseMultiple'
        "500":
          $ref: '#/responses/error'
      tags:
      - Trasy
    post:
      description: Tworzy nowa trase
      operationId: CreateTrasa
      parameters:
      - description: Nowa trasa
        in: body
        name: Body
        schema:
          properties:
            miejscowosc_poczatkowa:
              type: string
              x-go-name: MiejscowoscPoczatkowa
            miejscowosc_koncowa:
              type: string
              x-go-name: MiejscowoscKoncowa
          required:
          - typ
          type: object
      responses:
        "200":
          $ref: '#/responses/trasaResponseSingle'
        "500":
          $ref: '#/responses/error'
      tags:
      - Trasy
  /trasy/{id}:
    get:
      description: Zwraca pojedyncza trase
      operationId: GetTrasaByID
      parameters:
      - description: Id trasy
        format: int32
        in: path
        name: id
        required: true
        type: integer
        x-go-name: Id
      responses:
        "200":
          $ref: '#/responses/trasaResponseSingle'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
      tags:
      - Trasy

  /auth/{level}:
    post:
      description: Returns list of administratorzy
      operationId: CreateSession
      parameters:
      - description: 'The wanted access level: 1-Pracownik 2-Administrator 3-AdministratorDB'
        format: int8
        in: path
        name: level
        required: true
        type: integer
        x-go-name: Id
      responses:
        "201":
          $ref: '#/responses/success'
        "400":
          $ref: '#/responses/error400'
        "500":
          $ref: '#/responses/error500'
      tags:
      - Auth
produces:
- application/json
responses:
  administratorResponseSingle:
    description: "An object about an single administrator"
    schema:
      $ref: '#/definitions/Administrator'
  administratorsResponseMultiple:
    description: A list of all registered administrators
    schema:
      items:
        $ref: '#/definitions/Administrator'
      type: array
  bladResponseMultiple:
    description: A list of all errors
    schema:
      items:
        $ref: '#/definitions/Blad'
      type: array
  bladResponseSingle:
    description: "An object about an single error"
    schema:
      $ref: '#/definitions/Blad'
  kategoriaPrawaJazdyResponseSingle:
    description: "An object about an single driver license category"
    schema:
      $ref: '#/definitions/KategoriaPrawaJazdy'
  kategoriaPrawaJazdyResponseMultiple:
    description: A list of all driver license categories
    schema:
      items:
        $ref: '#/definitions/KategoriaPrawaJazdy'
      type: array
  kierowcaResponseSingle:
    description: "An object about an single driver"
    schema:
      $ref: '#/definitions/Kierowca'
  kierowcaResponseMultiple:
    description: A list of all drivers
    schema:
      items:
        $ref: '#/definitions/Kierowca'
      type: array
  kursResponseSingle:
    description: "An object about an single kurs"
    schema:
      $ref: '#/definitions/Kurs'
  kursResponseMultiple:
    description: A list of all kursy
    schema:
      items:
        $ref: '#/definitions/Kurs'
      type: array
  markaResponseSingle:
    description: Pojedyncza marka
    schema:
      $ref: '#/definitions/Marka'
  markaResponseMultiple:
    description: Wszystkie marki
    schema:
      items:
        $ref: '#/definitions/Marka'
      type: array
  pojazdResponseSingle:
    description: Pojedyncza pojazdy
    schema:
      $ref: '#/definitions/Pojazd'
  pojazdResponseMultiple:
    description: Wszystkie pojazdy
    schema:
      items:
        $ref: '#/definitions/Pojazd'
      type: array
  pojazdCiezarowyResponseSingle:
    description: Pojedyncza pojazdy ciezarowe
    schema:
      $ref: '#/definitions/PojazdCiezarowy'
  pojazdCiezarowyResponseMultiple:
    description: Wszystkie pojazdy ciezarowe
    schema:
      items:
        $ref: '#/definitions/PojazdCiezarowy'
      type: array
  pracownikResponseSingle:
    description: Pojedynczy pracownik
    schema:
      $ref: '#/definitions/Pracownik'
  pracownikResponseMultiple:
    description: Wszyscy pracownicy
    schema:
      items:
        $ref: '#/definitions/Pracownik'
      type: array
  stanowiskoAdministracyjneResponseSingle:
    description: Pojedyncze stanowisko administracyjne
    schema:
      $ref: '#/definitions/StanowiskoAdministracyjne'
  stanowiskoAdministracyjneResponseMultiple:
    description: Wszystkie stanowiska administracyjne
    schema:
      items:
        $ref: '#/definitions/StanowiskoAdministracyjne'
      type: array
  trasaResponseSingle:
    description: Pojedyncza trasa
    schema:
      $ref: '#/definitions/Trasa'
  trasaResponseMultiple:
    description: Wszystkie trasy
    schema:
      items:
        $ref: '#/definitions/Trasa'
      type: array
  error:
    description: Registered error
  error400:
    description: Registered error coming from bad client request
  error500:
    description: Registered error coming from internal server error
  success:
    description: Session creation success
    headers:
      SessionID:
        description: |-
          in: cookie
          name: session-id
        type: string
schemes:
- http
swagger: "2.0"
